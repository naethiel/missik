.project-single {

	> header {
		@include media-breakpoint-down(md) {
			height: 75vh;
		}
	}

	> header .wrapper {
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center;
		background-attachment: fixed;
		display: flex;
		align-items: center;
		justify-content: center;
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		padding: $spacer-lg;


		@include media-breakpoint-up(md) {
			background-size: contain;
			background-position: bottom right;
		}

		* {
			text-shadow: 0 0 15px transparentize(black, .4);
			color: white;
			text-align: center;
			// transition: all .3s ease-in-out;
		}

		.scrolled {
			opacity: 0;
			transform: scale(.8);
		}
	}

	> section {
		@include make-container();
		@each $breakpoint in map-keys($grid-breakpoints) {
			@include media-breakpoint-up($breakpoint) {
				max-width: map-get($container-max-widths, $breakpoint);
			}
		}

		> article, > section, > header {
			@include make-row();
		}

		> header {
			padding: $spacer-lg 0;

			> * {
				flex: 1;
				text-transform: uppercase;
				font-size: $font-size-sm;
				font-weight: 700;
				text-align: center;

				&:not(:last-child){
					border-right: 1px solid $gray;
				}
			}

			.definition {
				font-weight: 400;
			}
		}

		> article {
			text-align: justify;

			@include media-breakpoint-up(sm) {
				text-align: left;
			};

			section {
				@include make-col-ready();
				@include make-col(12);
			}
		}
	}

	footer {
		display: flex;
		align-items: stretch;

		a {
			flex: 1;
			display: flex;
			min-height: 5rem;
			background-position: center;
			background-size: cover;
			align-items: center;
			color: white;
			position: relative;
			overflow: hidden;
			padding: 0 $spacer-lg;

			&:before { // this block is used as a darkening filter on top of the data-applied gradient background of the <a> block
				content: "";
				display: block;
				position: absolute;
				top: 0;
				bottom: 0;
				left: 0;
				right: 0;
				background: transparentize($gray-darker, .35);
				z-index: 1;
				transition: background .5s ease;
			}

			&:after { // this is the triangle inside the block
				content: url('../images/triangle.svg');
				display: block;
				position: absolute;
				bottom: 0;
				width: 2rem;
				height: 2rem;
				z-index: 3;
				transition: transform .3s ease .2s;

			}

			&:hover {
				text-decoration: none;
				&:before {
					background: transparentize($gray-darker, .8);
				}
			}

			&:last-child {
				justify-content: flex-start;
				text-align: left;

				&:after {
					right: 0;
					transform: rotate(180deg) translate(-100%, -100%);
				}

				&:hover:after {
					transform: rotate(180deg) translate(0);
				}
			}

			&:first-child {
				justify-content: flex-end;
				text-align: right;

				&:after {
					left: 0;
					transform: rotate(-90deg) translate(-100%, -100%);
				}

				&:hover:after {
					transform: rotate(-90deg) translate(0);
				}
			}

			// making text content go over the fade effect from the :before pseudo-element
			* { z-index: 2; }
		}
	}
}
